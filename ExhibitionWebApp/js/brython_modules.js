__BRYTHON__.use_VFS = true
__BRYTHON__.VFS = {"expo_info": [".py", "class expo_info:\n    def __init__(self,name='',addr='',url=''):\n        self.name       = name\n        self.addr       = addr\n        self.url        = url\n        self.show       = ''\n        self.hall       = ''\n        self.startdate  = None\n        self.enddate    = None\n        self.list_item  = None\n\n    def show_info(self):\n        print(\"----------------\")\n        print(\"name  : {}\".format(self.name))\n        print(\"show  : {}\".format(self.show))\n        print(\"addr  : {}\".format(self.addr))\n        print(\"url   : {}\".format(self.url))\n        print(\"hall  : {}\".format(self.hall))\n        print(\"start : {}\".format(self.startdate.strftime('%Y/%m/%d')))\n        print(\"end   : {}\".format(self.enddate.strftime('%Y/%m/%d')))\n\n    def gen_json(self):\n        data = dict()\n        data.update({\"name\":self.name})\n        data.update({\"show\":self.show})\n        data.update({\"addr\":self.addr})\n        data.update({\"url\":self.url})\n        data.update({\"hall\":self.hall})\n        data.update({\"start\":self.startdate.strftime('%Y/%m/%d')})\n        data.update({\"end\":self.enddate.strftime('%Y/%m/%d')})\n        return data\n"], "json": [".js", "var $module = (function($B){\n\nreturn  {\n    loads : function(json_obj){\n        return $B.jsobject2pyobject(JSON.parse(json_obj))\n    },\n    load : function(file_obj){\n        return $module.loads(file_obj.$content);\n    },\n    dumps : function(obj){return JSON.stringify($B.pyobject2jsobject(obj))},\n}\n\n})(__BRYTHON__)\n"], "browser.html": [".py", "from _html import *"], "index": [".py", "from browser import document, alert, window\nfrom browser import html as HTML\nimport json\n\nfrom expo_info import *\n\njq = window.jQuery\n\ndef add_place(name,abb,default=False):\n    place_label = HTML.LABEL(name,Class='am-checkbox')\n    if(default == True):\n        place_ckbox = HTML.INPUT('',Type='checkbox',Value=abb,Name='cbx',Checked=True)#,Data-am-ucheck='')\n    else:\n        place_ckbox = HTML.INPUT('',Type='checkbox',Value=abb,Name='cbx')#,Data-am-ucheck='')\n    place_label <= place_ckbox\n    return place_label\n\ndocument['place_list'] <= add_place('\u4e0a\u6d77\u65b0\u56fd\u9645\u535a\u89c8\u4e2d\u5fc3','SNIEC')\n\ndef get_file_text(file_name):\n    fake_qs = '?foo={}'.format(window.Date.new().getTime())\n    print(fake_qs)\n    return open(file_name+fake_qs).read()\n\ndef gen_li(item):\n    item_title = HTML.A(item['show'],href=item['url'])\n    item_text1  = HTML.DIV('\u5c55\u9986\uff1a{}'.format(item['name']),Class='am-list-item-text')\n    item_text2  = HTML.DIV('\u65f6\u95f4\uff1a{}-{}'.format(item['start'],item['end']),Class='am-list-item-text')\n    item_text3  = HTML.DIV('\u5c55\u5385\uff1a{}'.format(item['hall']),Class='am-list-item-text')\n    item_text4  = HTML.DIV('\u5730\u5740\uff1a{}'.format(item['addr']),Class='am-list-item-text')\n    list_item  = HTML.LI('',Class='am-g am-list-item-desced')\n    list_item <= item_title\n    list_item <= item_text1\n    list_item <= item_text2\n    list_item <= item_text3\n    list_item <= item_text4\n    return list_item\n\ndef show_expo_list(li):\n    for i in li:\n        print(\"-----------------------\")\n        print(\"name  : {}\".format(i['name']))\n        print(\"show  : {}\".format(i['show']))\n        print(\"addr  : {}\".format(i['addr']))\n        print(\"url   : {}\".format(i['url']))\n        print(\"hall  : {}\".format(i['hall']))\n        print(\"start : {}\".format(i['start']))\n        print(\"end   : {}\".format(i['end']))\n\ndef refresh():\n    print('refresh00')\n    expo_list = []\n    document['expo_list'].clear()\n\n    date_info = document['datepicker'].value.split('-') #0:year,1:month\n    lines = get_file_text('sniec.json')\n    expo_list_year = json.loads(lines)[date_info[0]]\n    #show_expo_list(expo_list_year)\n    expo_list += list(filter(lambda x: (x['start'][:7]==date_info[0]+'/'+date_info[1])or(x['end'][:7]==date_info[0]+'/'+date_info[1]),expo_list_year))\n    #show_expo_list(expo_list)\n    #for item in document.get(name=\"cbx\"):\n    #    if(item.checked==True):\n    #        expo_list += json_list.find(name==item.value)\n    for expo in expo_list:\n        document['expo_list'] <= gen_li(expo)\n\ndef onPlaceSelected(ev):\n    refresh()\njq('#my-popup').on('close.modal.amui',onPlaceSelected)\n\ndef onDateChanged(ev):\n    refresh()\njq('#datepicker').datepicker().on('changeDate.datepicker.amui',onDateChanged)\n\nnow = window.Date()\njq('#datepicker').datepicker('setValue',now)\nrefresh()\n"], "browser": [".py", "import javascript\n\nfrom _browser import *\n\nfrom . local_storage import LocalStorage\nfrom . session_storage import SessionStorage\nfrom . object_storage import ObjectStorage\n\nWebSocket=window. WebSocket. new", 1]}